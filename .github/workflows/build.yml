# =======================================================================
#  Build bootc-style images based on uBlue “bluefin” and push to GHCR
# =======================================================================

name: Build bootc images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents:        read          # checkout
  packages:        write         # push to GHCR
  id-token:        write         # provenance sigstore (disabled for now)

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME:     huntergerlach/infra-upstream

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - BASE_FLAVOR: bluefin
            FEDORA_TAG:  stable
          # add more flavours / tags here if you like

    steps:
      # ───────────────────────── checkout source ────────────────────────
      - name: Checkout
        uses: actions/checkout@v4

      # ─────────────────────────── set up QEMU ──────────────────────────
      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      # ───────────────────────── set up Buildx ──────────────────────────
      - name: Set up Buildx builder
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host
          buildkitd-flags: |
            --allow-insecure-entitlement security.insecure
            --allow-insecure-entitlement network.host

      # ─────────────────────────── docker login ─────────────────────────
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ─────────────────────── build & push image ───────────────────────
      - name: Build and push bootc image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: true
          provenance: false

          # IMPORTANT — one entitlement *per line* (block scalar keeps the new-lines)
          allow: |
            security.insecure
            network.host

          build-args: |
            FLAVOR=${{ matrix.BASE_FLAVOR }}
            FEDORA_TAG=${{ matrix.FEDORA_TAG }}

          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.BASE_FLAVOR }}-${{ matrix.FEDORA_TAG }}
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

          cache-from: type=gha
          cache-to:   type=gha,mode=max